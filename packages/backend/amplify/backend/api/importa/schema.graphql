type File
  @model
  @auth(
    rules: [{allow: public, provider: iam, operations: [read]}, {allow: owner}]
  ) {
  id: ID!
  hash: String
  key: String!
  mime: String!
  meta: AWSJSON
  thumb: AWSJSON
  size: AWSJSON
  album: Album @connection(name: "AlbumFiles")
}

type Album
  @model
  @auth(
    rules: [
      {allow: public, provider: iam, operations: [read]}
      {allow: owner, operations: [create, update, delete, read]}
    ]
  ) {
  id: ID!
  name: String
  identityId: String
  files: [File] @connection(name: "AlbumFiles")
  export: Export @connection(name: "ExportAlbum")
}

type Export
  @model
  @auth(
    rules: [
      {allow: public, provider: iam, operations: [read]}
      {allow: owner, operations: [create, update, delete, read]}
    ]
  ) {
  id: String!
  album: Album @connection(name: "ExportAlbum")
}

enum ReviewResume {
  like
  dislike
}

type Review
  @model
  @key(
    name: "byIdentity"
    fields: ["identityId", "createdAt"]
    queryField: "reviewsByIdentity"
  )
  @auth(
    rules: [
      {allow: owner, operations: [read, create, update, delete]}
      {allow: public, provider: iam, operations: [read, create, update, delete]}
    ]
  ) {
  id: ID!
  createdAt: AWSDateTime
  identityId: String
  fileId: String
  resume: ReviewResume
}
